// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using Foundation;
using Newtonsoft.Json;
using UIKit;

namespace Scattergories
{
	public partial class Categories_Controller : UITableViewController
	{
        List<string> _allCategoriesList;
        UIRefreshControl _refresher; 

        public Categories_Controller (IntPtr handle) : base (handle)
		{
		}

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            LoadJson();

            TableView.Source = new CategoriesSource(_allCategoriesList.OrderBy(a => Guid.NewGuid()).ToList());
            TableView.RegisterClassForCellReuse(typeof(CategoriesCell), CategoriesCell.Key);
            TableView.AllowsSelection = false;

            _refresher = new UIRefreshControl();

            _refresher.ValueChanged += _refresher_ValueChanged;

            TableView.AddSubview(_refresher);
        }

        private void _refresher_ValueChanged(object sender, EventArgs e)
        {
            ReloadCategories();
            RefreshAsync();
        }

        void ReloadCategories()
        {
            ((CategoriesSource)TableView.Source).UpdateList();
            //TableView.Source = new CategoriesSource(_allCategoriesList.OrderBy(a => Guid.NewGuid()).ToList());
            TableView.ReloadData();
        }

        void RefreshAsync()
        {
            _refresher.BeginRefreshing();
            _refresher.EndRefreshing();

        }

        void LoadJson()
        {
            //json took from https://github.com/davidwen/scattergories
            using (StreamReader r = new StreamReader("categories_fr.json"))
            {
                string json = r.ReadToEnd();
                _allCategoriesList = JsonConvert.DeserializeObject<List<string>>(json);
            }
        }

        public void InitNewGame()
        {
           

                ReloadCategories();
            //ReloadCategories();
            //InvokeOnMainThread(() => {
            //    //((CategoriesSource)TableView.Source).UpdateList();
            //    TableView.Source = new CategoriesSource(_allCategoriesList.OrderBy(a => Guid.NewGuid()).ToList());
            //    TableView.ReloadData();
            //    TableView.SetNeedsDisplay();
            //});
          
        }
    }

    public class CategoriesSource : UITableViewSource
    {
        List<string> _list;

        public CategoriesSource(List<string> list)
        {
            _list = list;
        }

        public void UpdateList()
        {
            _list = _list.OrderBy(a => Guid.NewGuid()).ToList();
        }

        public override UITableViewCell GetCell(UITableView tableView, NSIndexPath indexPath)
        {
            CategoriesCell cell = tableView.DequeueReusableCell(CategoriesCell.Key) as CategoriesCell;
            cell.LayoutCell($"{indexPath.Row + 1} - {_list[indexPath.Row]}");
            return cell;
        }

        public override nint RowsInSection(UITableView tableview, nint section)
        {
            return 12;
        }
        public override string TitleForHeader(UITableView tableView, nint section)
        {
            return "Cat√©gories";
        }
    }
}
